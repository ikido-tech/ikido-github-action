name: 'IKIDO action'
description: ''
inputs:
  username:
    description: 'IKIDO username'
    required: true
  password:
    description: 'IKIDO password'
    required: true
  scan-label:
    description: 'Scan label'
    required: false
    default: 'result'
  ikido-url:
    description: 'IKIDO url for perform BOM scan'
    required: false
    default: 'https://app.ikido.tech'
  project-path:
    description: 'Path to PCB project'
    required: false
    default: './'
  result-path:
    description: 'Path to .csv result file'
    required: false
    default: './result.csv'
  s3-bucket:
    description: 'Bucket with ikido-cli binary'
    required: false
  github-token:
    description: 'Github instance'
    required: true
outputs:
  random-number:
    description: "Random number"
    value: ''
runs:
  using: "composite"
  steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
    - name: 'Configure AWS'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-north-1
    - name: 'Download ikido-cli'
      run: |
        aws s3 cp ${{ inputs.s3-bucket }} ./ikido-cli
      shell: bash
    - name: 'Make ikido-cli binary executable'
      run: |
        chmod +x ./ikido-cli
      shell: bash
    - name: 'Extract BOM .csv file from project'
      run: |
        ./ikido-cli extract-bom-csv --project_path ${{ inputs.project-path }} --csv_path ${{ inputs.result-path }}
      shell: bash
    - name: 'Configure IKIDO cli'
      run: |
        ./ikido-cli configure --url ${{ inputs.ikido-url }} --username ${{ inputs.username }} --password ${{ inputs.password }}
      shell: bash
    - name: 'Create settings file'
      run: |
        echo '{"label":"${{ inputs.scan-label }}"}' >> settings.json
      shell: bash
    - name: 'Scan bom file'
      continue-on-error: true
      run: |
        ./ikido-cli scan --export result.zip ${{ inputs.result-path }} settings.json >> ikido_output.txt
      shell: bash
    - name: Unpack scan result archive
      run: |
        unzip -q result.zip -d result
      shell: bash
    - name: Get ikido platform URL
      run: |
        echo "IKDO_URL=${{ inputs.ikido-url }}" >> $GITHUB_ENV
      shell: bash
    - name: 'Set up python'
      uses: actions/setup-python@v4
    - name: Install dependencies
      run: |
        python3 -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      shell: bash
    - name: "Add result comment to the commit"
      run: |
        source venv/bin/activate
        python main.py
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
        GITHUB_SENDER_LOGIN: ${{ github.event.sender.login }}
        GITHUB_REPO_HTML_URL: ${{ github.event.repository.html_url }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_BRANCH: ${{ github.ref }}
      shell: bash
